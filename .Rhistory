legend.title="",
lab = FALSE))
}
return(as.data.frame(table))
}
cortable(personality)
cortable <- function(df,
correction="holm",
type="pearson",
print.result=TRUE,
plot.result=TRUE){
type <- ifelse(type == "s", "spearman",
ifelse(type == "spearman", "spearman","pearson"))
correction_text <- ifelse(correction=="holm", "Holm–Bonferroni",
ifelse(correction=="fdr", "False Discovery Rate",correction))
for (i in names(df)){
if (is.numeric(df[,i]) == FALSE){
df[,i] = NULL
}
}
dimnames <- names(df)
df <- as.matrix(df)
R <- rcorr(df, type = type)$r
p <- rcorr(df, type = type)$P
p <- p.adjust(p, method = correction)
p.mat <- matrix(p, ncol = ncol(R), dimnames = list(dimnames,dimnames))
## define notions for significance levels; spacing is important.
mystars <- ifelse(p < .001, "***", ifelse(p < .01, "** ", ifelse(p < .05, "* ", " ")))
## trunctuate the matrix that holds the correlations to two decimal
R <- format(round(cbind(rep(-1.11, ncol(df)), R), 2))[,-1]
## build a new matrix that includes the correlations with their apropriate stars
table <- matrix(paste(R, mystars, sep=""), ncol=ncol(df))
diag(table) <- paste(diag(R), " ", sep="")
rownames(table) <- colnames(df)
colnames(table) <- paste(colnames(df), "", sep="")
## remove upper triangle
table <- as.matrix(table)
table[upper.tri(table, diag = TRUE)] <- NA
table <- as.data.frame(table)
## remove last column and return the matrix (which is now a data frame)
table <- cbind(table[1:length(table)-1])
if (print.result==TRUE){
print(paste("A ", type, "'s correlation matrix (correction: ", correction, ")", sep = ""))
print(table)
}
if (plot.result==TRUE){
print(ggcorrplot(rcorr(df, type = type)$r,
title = paste("A ", type, "'s correlation matrix (correction: ", correction, ")", sep = ""),
method = "circle",
type="lower",
colors=c("#E91E63", "white", "#03A9F4"),
hc.order = TRUE,
p.mat = p.mat,
insig="pch",
legend.title="",
lab = FALSE))
}
return(as.data.frame(table))
}
cortable(personality)
cortable <- function(df,
correction="holm",
type="pearson",
print.result=TRUE,
plot.result=TRUE){
type <- ifelse(type == "s", "spearman",
ifelse(type == "spearman", "spearman","pearson"))
correction_text <- ifelse(correction=="holm", "Holm–Bonferroni",
ifelse(correction=="fdr", "False Discovery Rate",correction))
for (i in names(df)){
if (is.numeric(df[,i]) == FALSE){
df[,i] = NULL
}
}
dimnames <- names(df)
df <- as.matrix(df)
R <- rcorr(df, type = type)$r
p <- rcorr(df, type = type)$P
p <- p.adjust(p, method = correction)
p.mat <- matrix(p, ncol = ncol(R), dimnames = list(dimnames,dimnames))
## define notions for significance levels; spacing is important.
mystars <- ifelse(p < .001, "***", ifelse(p < .01, "** ", ifelse(p < .05, "* ", " ")))
## trunctuate the matrix that holds the correlations to two decimal
R <- format(round(cbind(rep(-1.11, ncol(df)), R), 2))[,-1]
## build a new matrix that includes the correlations with their apropriate stars
table <- matrix(paste(R, mystars, sep=""), ncol=ncol(df))
diag(table) <- paste(diag(R), " ", sep="")
rownames(table) <- colnames(df)
colnames(table) <- paste(colnames(df), "", sep="")
## remove upper triangle
table <- as.matrix(table)
table[upper.tri(table, diag = TRUE)] <- NA
table <- as.data.frame(table)
## remove last column and return the matrix (which is now a data frame)
table <- cbind(table[1:length(table)-1])
if (print.result==TRUE){
print(paste("A ", type, "'s correlation matrix (correction: ", correction_text, ")", sep = ""))
print(table)
}
if (plot.result==TRUE){
print(ggcorrplot(rcorr(df, type = type)$r,
title = paste("A ", type, "'s correlation matrix (correction: ", correction_text, ")", sep = ""),
method = "circle",
type="lower",
colors=c("#E91E63", "white", "#03A9F4"),
hc.order = TRUE,
p.mat = p.mat,
insig="pch",
legend.title="",
lab = FALSE))
}
return(as.data.frame(table))
}
cortable(personality)
install.packages("devtools")
library("devtools")
install_github("neuropsychology/neuropsychology.R", dependencies=TRUE)
library(neuropsychology)
cortable(personality)
install.packages("devtools")
library("devtools")
install_github("neuropsychology/neuropsychology.R", dependencies=TRUE)
install.packages("devtools")
library(neuropsychology)
cortable(personality)
library(neuropsychology)
citation("neuropsychology")
library(lme4)
library(MuMIn)
SessionInfos()
sessionInfo()
setwd("D:/Programs/Dropbox/RECHERCHE/DOCUMENTS/R_packages/neuropsychology.R")
source("preprocessing.R")
library(lme4)
library(MuMIn)
library(optimx)
library(psych)
describe(dfobs2$Age)
summary(dfobs2$Sex)
library(dplyr)
descriptive <- df %>%
group_by(Intensity,Nature) %>%
summarise(
EDA_m = mean(EDA),
EDA_sd = sd(EDA),
Intensity_m = mean(Subjective_Intensity),
Intensity_sd = sd(Subjective_Intensity))
descriptive[,-c(1,2)] <- round(descriptive[,-c(1,2)],2)
descriptive
summary(dfobs3)
# MODELS -----------------------------------------------------
df$Nature <- factor(df$Nature,levels = c( "Real","Fiction"))
df$Intensity <- factor(df$Intensity,levels = c( "Neutral","Mild","High"))
fit <- lmer(Subjective_Intensity ~ Intensity / Nature +
(1+Condition*Intensity|Participant) +
(1+Condition|Item),
data=df,
control = lmerControl(calc.derivs=F ))#,optimizer = "optimx",
# optCtrl = list(method = "nlminb")))
setwd("D:/Programs/Dropbox/RECHERCHE/DOCUMENTS/R_packages/neuropsychology.R")
setwd("D:/Programs/Dropbox/RECHERCHE/articles/Fiction/Fiction2/Statistics")
source("preprocessing.R")
library(lme4)
library(MuMIn)
library(optimx)
library(psych)
describe(dfobs2$Age)
summary(dfobs2$Sex)
library(dplyr)
descriptive <- df %>%
group_by(Intensity,Nature) %>%
summarise(
EDA_m = mean(EDA),
EDA_sd = sd(EDA),
Intensity_m = mean(Subjective_Intensity),
Intensity_sd = sd(Subjective_Intensity))
descriptive[,-c(1,2)] <- round(descriptive[,-c(1,2)],2)
descriptive
summary(dfobs3)
# MODELS -----------------------------------------------------
df$Nature <- factor(df$Nature,levels = c( "Real","Fiction"))
df$Intensity <- factor(df$Intensity,levels = c( "Neutral","Mild","High"))
fit <- lmer(Subjective_Intensity ~ Intensity / Nature +
(1+Condition*Intensity|Participant) +
(1+Condition|Item),
data=df,
control = lmerControl(calc.derivs=F ))#,optimizer = "optimx",
APAze <- function(fit, method="boot"){
R2 <- r.squaredGLMM(fit)
confint <- confint(fit, method=method, nsim=1000,oldNames=F)
coefs <- data.frame(coef(summary(fit)))
coefs$CI25 <- tail(confint,nrow(coefs))[,1]
coefs$CI75 <- tail(confint,nrow(coefs))[,2]
p_list <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs <- subset(coefs,select=-c(Std..Error,t.value))
coefs <- round(coefs,2)
coefs$p <- round(p_list,3)
p <- ifelse(coefs$p < .001, "< .001",
ifelse(coefs$p < .01, "< .01",
ifelse(coefs$p < .05, "< .05",
paste("= ", coefs$p, sep=""))))
apa <- paste(
paste(rownames(coefs), ": ", sep=""),
paste("(beta = ", as.character(coefs$Estimate), ",", sep=""),
paste(" 95% CI [", as.character(coefs$CI25), ", ", sep=""),
paste("", as.character(coefs$CI75), "]", sep=""),
paste(", p ", p, ")", sep=""),
sep=""
)
return(apa)
}
APAze(fit)
APAze(fit, "Wald")
method="Wald"
R2 <- r.squaredGLMM(fit)
confint <- confint(fit, method=method, nsim=1000,oldNames=F)
coefs <- data.frame(coef(summary(fit)))
coefs$CI25 <- tail(confint,nrow(coefs))[,1]
coefs$CI75 <- tail(confint,nrow(coefs))[,2]
p_list <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs <- subset(coefs,select=-c(Std..Error,t.value))
coefs <- round(coefs,2)
coefs$p <- round(p_list,3)
p <- ifelse(coefs$p < .001, "< .001",
ifelse(coefs$p < .01, "< .01",
ifelse(coefs$p < .05, "< .05",
paste("= ", coefs$p, sep=""))))
R2_apa <- paste("The overall model predicting ... successfully converged and explained",
"of the variance of the endogen (the conditional R²).",
"The variance explained by fixed factors was
rather small (marginal R² = ",").", sep="")
apa <- paste(
paste(rownames(coefs), ": ", sep=""),
paste("(beta = ", as.character(coefs$Estimate), ",", sep=""),
paste(" 95% CI [", as.character(coefs$CI25), ", ", sep=""),
paste("", as.character(coefs$CI75), "]", sep=""),
paste(", p ", p, ")", sep=""),
sep=""
)
R2_apa
R2
R2$R2m
R2m[1]
R2[1]
as.character(round(R2[1]),2)
as.character(round(R2[1]))
as.character(specify_decimal(R2[1], 2))
as.character(format(round(R2[1]), nsmall = 2))
as.character(format(R2[1], nsmall = 2))
as.character(fixed(R2[1], digits = 2))
format(round(R2[1], 2), trim=T, nsmall=2)
as.character(format(round(R2[1], 2), trim=T, nsmall=2))
as.character(format(round(R2[1], 2), trim=F, nsmall=2))
as.character(format(round(R2[1], 2), nsmall=2))
substring(as.character(format(round(R2[1], 2), nsmall=2)),2),
substring(as.character(format(round(R2[1], 2), nsmall=2)),2)
R2 <- r.squaredGLMM(fit)
confint <- confint(fit, method=method, nsim=1000,oldNames=F)
coefs <- data.frame(coef(summary(fit)))
coefs$CI25 <- tail(confint,nrow(coefs))[,1]
coefs$CI75 <- tail(confint,nrow(coefs))[,2]
p_list <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs <- subset(coefs,select=-c(Std..Error,t.value))
coefs <- round(coefs,2)
coefs$p <- round(p_list,3)
p <- ifelse(coefs$p < .001, "< .001",
ifelse(coefs$p < .01, "< .01",
ifelse(coefs$p < .05, "< .05",
paste("= ", coefs$p, sep=""))))
R2_apa <- paste("The overall model predicting ... successfully converged and explained",
substring(as.character(format(round(R2[2], 2), nsmall=2)),2),
"of the variance of the endogen (the conditional R²).",
"The variance explained by fixed factors was rather small (marginal R² = ",
substring(as.character(format(round(R2[1], 2), nsmall=2)),2),
").", sep="")
apa <- paste(
paste(rownames(coefs), ": ", sep=""),
paste("(beta = ", as.character(coefs$Estimate), ",", sep=""),
paste(" 95% CI [", as.character(coefs$CI25), ", ", sep=""),
paste("", as.character(coefs$CI75), "]", sep=""),
paste(", p ", p, ")", sep=""),
sep=""
)
R2_apa
substring(as.character(format(round(R2[2], 2), nsmall=2)), 3)
R2 <- r.squaredGLMM(fit)
confint <- confint(fit, method=method, nsim=1000,oldNames=F)
coefs <- data.frame(coef(summary(fit)))
coefs$CI25 <- tail(confint,nrow(coefs))[,1]
coefs$CI75 <- tail(confint,nrow(coefs))[,2]
p_list <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs <- subset(coefs,select=-c(Std..Error,t.value))
coefs <- round(coefs,2)
coefs$p <- round(p_list,3)
p <- ifelse(coefs$p < .001, "< .001",
ifelse(coefs$p < .01, "< .01",
ifelse(coefs$p < .05, "< .05",
paste("= ", coefs$p, sep=""))))
R2_apa <- paste("The overall model predicting ... successfully converged and explained ",
substring(as.character(format(round(R2[2], 2), nsmall=2)), 3),
"% of the variance of the endogen (the conditional R²).",
"The variance explained by fixed factors was rather small (marginal R² = ",
substring(as.character(format(round(R2[1], 2), nsmall=2)), 2),
").", sep="")
apa <- paste(
paste(rownames(coefs), ": ", sep=""),
paste("(beta = ", as.character(coefs$Estimate), ",", sep=""),
paste(" 95% CI [", as.character(coefs$CI25), ", ", sep=""),
paste("", as.character(coefs$CI75), "]", sep=""),
paste(", p ", p, ")", sep=""),
sep=""
)
R2_apa
R2_apa <- paste("The overall model predicting ... successfully converged and explained ",
substring(as.character(format(round(R2[2], 2), nsmall=2)), 3),
"% of the variance of the endogen (the conditional R²).",
"The variance explained by the fixed effects was of ",
substring(as.character(format(round(R2[1], 2), nsmall=2)), 2),
" (the marginal R²).", sep="")
R2_apa
R2_apa <- paste("The overall model predicting ... successfully converged and explained ",
substring(as.character(format(round(R2[2], 2), nsmall=2)), 3),
"% of the variance of the endogen (the conditional R²).",
"The variance explained by the fixed effects was of ",
substring(as.character(format(round(R2[1], 2), nsmall=2)), 3),
"% (the marginal R²).", sep="")
R2_apa
as.character(R2[2]-R2[1])
substring(as.character(R2[2]-R2[1]), nsmall=2)), 3)
substring(as.character(R2[2]-R2[1]), nsmall=2), 3)
substring(as.character(format(R2[2]-R2[1], nsmall=2)), 3)
substring(as.character(format(round(R2[2]-R2[1], 2), nsmall=2)), 3)
R2_apa <- paste("The overall model predicting ... successfully converged and explained ",
substring(as.character(format(round(R2[2], 2), nsmall=2)), 3),
"% of the variance of the endogen (the conditional R²). ",
"The variance explained by the fixed effects was of ",
substring(as.character(format(round(R2[1], 2), nsmall=2)), 3),
"% (the marginal R²) and the one explained by the random effects of ",
substring(as.character(format(round(R2[2]-R2[1], 2), nsmall=2)), 3),
"%.", sep="")
R2_apa
APAze <- function(fit, method="boot"){
R2 <- r.squaredGLMM(fit)
confint <- confint(fit, method=method, nsim=1000,oldNames=F)
coefs <- data.frame(coef(summary(fit)))
coefs$CI25 <- tail(confint,nrow(coefs))[,1]
coefs$CI75 <- tail(confint,nrow(coefs))[,2]
p_list <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs <- subset(coefs,select=-c(Std..Error,t.value))
coefs <- round(coefs,2)
coefs$p <- round(p_list,3)
p <- ifelse(coefs$p < .001, "< .001",
ifelse(coefs$p < .01, "< .01",
ifelse(coefs$p < .05, "< .05",
paste("= ", coefs$p, sep=""))))
R2_apa <- paste("The overall model predicting ... successfully converged and explained ",
substring(as.character(format(round(R2[2], 2), nsmall=2)), 3),
"% of the variance of the endogen (the conditional R²). ",
"The variance explained by the fixed effects was of ",
substring(as.character(format(round(R2[1], 2), nsmall=2)), 3),
"% (the marginal R²) and the one explained by the random effects of ",
substring(as.character(format(round(R2[2]-R2[1], 2), nsmall=2)), 3),
"%.", sep="")
apa <- paste(
paste(rownames(coefs), ": ", sep=""),
paste("(beta = ", as.character(coefs$Estimate), ",", sep=""),
paste(" 95% CI [", as.character(coefs$CI25), ", ", sep=""),
paste("", as.character(coefs$CI75), "]", sep=""),
paste(", p ", p, ")", sep=""),
sep=""
)
return(R2_apa, apa)
}
APAze(fit)
APAze(fit), "Wald"
APAze(fit), "Wald")
APAze(fit, "Wald")
APAze <- function(fit, method="boot"){
R2 <- r.squaredGLMM(fit)
confint <- confint(fit, method=method, nsim=1000,oldNames=F)
coefs <- data.frame(coef(summary(fit)))
coefs$CI25 <- tail(confint,nrow(coefs))[,1]
coefs$CI75 <- tail(confint,nrow(coefs))[,2]
p_list <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs <- subset(coefs,select=-c(Std..Error,t.value))
coefs <- round(coefs,2)
coefs$p <- round(p_list,3)
p <- ifelse(coefs$p < .001, "< .001",
ifelse(coefs$p < .01, "< .01",
ifelse(coefs$p < .05, "< .05",
paste("= ", coefs$p, sep=""))))
R2_apa <- paste("The overall model predicting ... successfully converged and explained ",
substring(as.character(format(round(R2[2], 2), nsmall=2)), 3),
"% of the variance of the endogen (the conditional R²). ",
"The variance explained by the fixed effects was of ",
substring(as.character(format(round(R2[1], 2), nsmall=2)), 3),
"% (the marginal R²) and the one explained by the random effects of ",
substring(as.character(format(round(R2[2]-R2[1], 2), nsmall=2)), 3),
"%.", sep="")
apa <- paste(
R2_apa,
paste(rownames(coefs), ": ", sep=""),
paste("(beta = ", as.character(coefs$Estimate), ",", sep=""),
paste(" 95% CI [", as.character(coefs$CI25), ", ", sep=""),
paste("", as.character(coefs$CI75), "]", sep=""),
paste(", p ", p, ")", sep=""),
sep=""
)
return(apa)
}
APAze(fit, "Wald")
apa <- paste(R2_apa, apa)
APAze <- function(fit, method="boot"){
R2 <- r.squaredGLMM(fit)
confint <- confint(fit, method=method, nsim=1000,oldNames=F)
coefs <- data.frame(coef(summary(fit)))
coefs$CI25 <- tail(confint,nrow(coefs))[,1]
coefs$CI75 <- tail(confint,nrow(coefs))[,2]
p_list <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs <- subset(coefs,select=-c(Std..Error,t.value))
coefs <- round(coefs,2)
coefs$p <- round(p_list,3)
p <- ifelse(coefs$p < .001, "< .001",
ifelse(coefs$p < .01, "< .01",
ifelse(coefs$p < .05, "< .05",
paste("= ", coefs$p, sep=""))))
R2_apa <- paste("The overall model predicting ... successfully converged and explained ",
substring(as.character(format(round(R2[2], 2), nsmall=2)), 3),
"% of the variance of the endogen (the conditional R²). ",
"The variance explained by the fixed effects was of ",
substring(as.character(format(round(R2[1], 2), nsmall=2)), 3),
"% (the marginal R²) and the one explained by the random effects of ",
substring(as.character(format(round(R2[2]-R2[1], 2), nsmall=2)), 3),
"%.", sep="")
apa <- paste(
paste(rownames(coefs), ": ", sep=""),
paste("(beta = ", as.character(coefs$Estimate), ",", sep=""),
paste(" 95% CI [", as.character(coefs$CI25), ", ", sep=""),
paste("", as.character(coefs$CI75), "]", sep=""),
paste(", p ", p, ")", sep=""),
sep=""
)
apa <- c(R2_apa, apa)
return(apa)
}
APAze(fit, "Wald")
library(neuropsychology)
require(neuropsychology)
df <- personality
fit <- lmer(Age ~ BMI + (1|Laterality), data=df)
fit <- lmer(Age ~ BMI + (1|Study_Level), data=df)
summary(fit)
fit <- lmer(Age ~ BMI + (1|Salary), data=df)
summary(fit)
APAze(fit)
library(dplu)
library(dplyr)
sessionInfo()
dplyr::filter()
?dplyr::filter()
?filter
?select
summary(fit)
varsnames <- all.vars(terms(fit))
R2 <- r.squaredGLMM(fit)
confint <- confint(fit, method=method, nsim=nsim,oldNames=F)
coefs <- data.frame(coef(summary(fit)))
coefs$CI25 <- tail(confint,nrow(coefs))[,1]
coefs$CI75 <- tail(confint,nrow(coefs))[,2]
p_list <- 2 * (1 - pnorm(abs(coefs$t.value)))
method="boot"
nsim=1000
method="Wald"
confint <- confint(fit, method=method, nsim=nsim,oldNames=F)
coefs <- data.frame(coef(summary(fit)))
coefs$CI25 <- tail(confint,nrow(coefs))[,1]
coefs$CI75 <- tail(confint,nrow(coefs))[,2]
p_list <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs
coefs <- coefs[-c("Std..Error","t.value")]
coefs[-c"Std..Error"]
coefs
coefs[,-c("Std..Error","t.value")]
coefs[,"Std..Error"]
coefs[,-"Std..Error"]
coefs[,!(names(df) %in% c("Std..Error","t.value"))]
coefs[,!(names(coefs) %in% c("Std..Error","t.value"))]
library(neuropsychology)
setwd("D:/Programs/Dropbox/RECHERCHE/DOCUMENTS/R_packages/neuropsychology.R")
system("R CMD Rd2pdf .")
system("R CMD Rd2pdf .")
setwd("D:/Programs/Dropbox/RECHERCHE/DOCUMENTS/R_packages/neuropsychology.R")
system("R CMD Rd2pdf .")
library(neuropsychology)
system("R CMD Rd2pdf .")
system("R CMD Rd2pdf docs)
system("R CMD Rd2pdf .)
system("R CMD Rd2pdf docs")
system("R CMD Rd2pdf .")
library(neuropsychology)
library(neuropsychology)
install.packages("neuropsychology")
library(neuropsychology)
citation("neuropsychology")
citation(ggplot2)
citation("ggplot2")
citation("dplyr")
citation("neuropsychology")
citation("dplyr")
install.packages("neuropsychology")
citation(neuropsychology)
citation("neuropsychology")
