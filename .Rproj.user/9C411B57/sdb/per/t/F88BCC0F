{
    "contents" : "source(\"preprocessing.R\")\n\nlibrary(lme4)\nlibrary(MuMIn)\nlibrary(optimx)\nlibrary(psych)\ndescribe(dfobs2$Age)\nsummary(dfobs2$Sex)\n\n\n\nlibrary(dplyr)\ndescriptive <- df %>%\n  group_by(Intensity,Nature) %>%\n  summarise(\n    EDA_m = mean(EDA),\n    EDA_sd = sd(EDA),\n    Intensity_m = mean(Subjective_Intensity),\n    Intensity_sd = sd(Subjective_Intensity))\ndescriptive[,-c(1,2)] <- round(descriptive[,-c(1,2)],2)\ndescriptive\n\n\nsummary(dfobs3)\n\n\n\n\n# MODELS -----------------------------------------------------\ndf$Nature <- factor(df$Nature,levels = c( \"Real\",\"Fiction\"))\ndf$Intensity <- factor(df$Intensity,levels = c( \"Neutral\",\"Mild\",\"High\"))\n\nfit <- lmer(Subjective_Intensity ~ Intensity / Nature +\n              (1+Condition*Intensity|Participant) +\n              (1+Condition|Item),\n            data=df,\n            control = lmerControl(calc.derivs=F ))#,optimizer = \"optimx\",\n                                 # optCtrl = list(method = \"nlminb\")))\n\nr.squaredGLMM(fit)\n\nlibrary(lsmeans)\nlibrary(lmerTest)\nlsmeans::lsmeans(fit, pairwise~Intensity)\nplot(lmerTest::lsmeans(fit))\n\nconfint <- confint(fit, method=\"Wald\", nsim=1000,oldNames=F)\ncoefs <- data.frame(coef(summary(fit)))\ncoefs$CI25 <- tail(confint,nrow(coefs))[,1]\ncoefs$CI975 <- tail(confint,nrow(coefs))[,2]\np_list <- 2 * (1 - pnorm(abs(coefs$t.value)))\ncoefs <- subset(coefs,select=-c(Std..Error,t.value))\ncoefs <- round(coefs,2)\ncoefs$p <- round(p_list,3)\n\ncoefs\n\ndfobs <- read.csv2(\"data_grouped_by_participants.csv\")\n\n\n\n\n\n# EXECUTIVE FUNCTIONS 2 ---------------------------------------------------\n#Regression\n\ndescribe(dfobs3$WM_capacity)\ndescribe(dfobs3$WM_updating)\ndescribe(dfobs3$TMT)\ndescribe(dfobs3$Stroop)\n\nfit <- lm(d_EDA_Mild ~ Stroop + TMT + WM_updating + WM_capacity,dfobs2)\nfit <- lm(d_EDA_High ~ Stroop + TMT + WM_updating + WM_capacity,dfobs2)\nfit <- lm(d_Intensity_Mild ~ Stroop + TMT + WM_updating + WM_capacity,dfobs2)\nfit <- lm(d_Intensity_High ~ Stroop + TMT + WM_updating + WM_capacity,dfobs2)\nfit <- lm(d_Intensity_High ~ WM_capacity,dfobs2)\nfit <- lm(d_Intensity_High ~ WM_capacity,dfobs2)\nsummary(fit)\nstep <- step(fit,direction = \"both\")\nsummary(step)\nstep$anova\n\nfit <- lm(d_Intensity_Mild ~ 1,dfobs2)\nfit <- lm(d_EDA_High ~ 1,dfobs2)\nfit <- lm(d_EDA_Mild ~ 1,dfobs2)\n\nsummary(fit)\n\n\nt.test(as.numeric(dfobs2$d_EDA_High),as.numeric(dfobs2$d_EDA_Mild),var.equal = T, paired = T)\nt.test(as.numeric(dfobs2$d_Intensity_High),as.numeric(dfobs2$d_Intensity_Mild),var.equal = T, paired = T)\ndescribe(dfobs2$d_EDA_High)\ndescribe(dfobs2$d_EDA_Mild)\ndescribe(dfobs2$d_Intensity_High)\ndescribe(dfobs2$d_Intensity_Mild)\n#Corr?lations\ncor.test(dfobs2$WM_updating,dfobs2$d_Intensity_High_RAW)\ncor.test(dfobs2$WM_updating,dfobs2$d_Intensity_Mild_RAW)\ncor.test(dfobs2$WM_updating,dfobs2$d_Intensity_Neutral_RAW)\n\n#Chez moi ca sors juste avec le d_Intensity_High non RAW, qui corerspond au truc normalis? sur REAL\ncor.test(dfobs2$WM_updating,dfobs2$d_Intensity_High)\ncor.test(dfobs2$WM_updating,dfobs2$d_Intensity_High)\ncor.test(dfobs2$WM_updating,dfobs2$d_Intensity_High)\n\n\n\n\n\n# PLOT --------------------------------------------------------------------\nlibrary(ggplot2)\ndfobs$Nature <- factor(dfobs$Nature,levels = c( \"Real\",\"Fiction\"))\ndfobs$Intensity <- factor(dfobs$Intensity,levels = c( \"Neutral\",\"Mild\",\"High\"))\n\nplot <- ggplot(dfobs,aes(x=Intensity,y=Subjective_Intensity,fill=Nature)) +\n  \n  \n  # geom_point(data=dfobs,aes(x=Intensity, y=mean(Subjective_Intensity), color=Condition), shape=15, size=0) +\n  # guides(color=guide_legend(title=NULL)) +\n\n  labs(x=\"\\nIntensity\", y=\"Subjective Intensity\\n\") +\n  theme_bw() + \n  scale_fill_brewer(palette=\"Set1\") +\n  scale_colour_brewer(palette=\"Set1\") +\n  theme(\n    panel.border = element_blank(),\n        legend.position=\"top\",\n        legend.title=element_blank(),\n        legend.title=element_text(size=25,face=\"bold\"),\n        legend.key=element_blank(),\n        legend.text = element_text(size = 25),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        strip.text.y = element_blank() ,\n        strip.text.x = element_text(size =25),\n        strip.background =  element_blank() ,\n        strip.background = element_blank(),\n        axis.title = element_text(size = 25),\n        axis.text.x = element_text(size = 22),\n        axis.text.y = element_text(size = 22),\n        axis.ticks = element_blank(),\n        axis.line = element_line(colour = \"black\")) +\n  geom_boxplot(colour = \"black\",outlier.colour = \"White\")\n  # guides(fill = guide_legend(override.aes = list(size=10)))\nplot\n\n\nggsave(\"plot_Intensity.tiff\", plot=plot,  width=12, height=8,dpi = 600)\n\n\nplot <- ggplot(dfobs,aes(x=Intensity,y=EDA)) +\n  \n  \n  # geom_point(data=dfobs,aes(x=Intensity, y=mean(Subjective_Intensity), color=Condition), shape=15, size=0) +\n  # guides(color=guide_legend(title=NULL)) +\n  \n  labs(x=\"\\nIntensity\", y=\"EDA\\n\") +\n  theme_bw() + \n  # scale_fill_brewer(palette=\"Set1\") +\n  # scale_colour_brewer(palette=\"Set1\") +\n  theme(\n    panel.border = element_blank(),\n    legend.position=\"top\",\n    legend.title=element_blank(),\n    legend.title=element_text(size=25,face=\"bold\"),\n    legend.key=element_blank(),\n    legend.text = element_text(size = 25),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    strip.text.y = element_blank() ,\n    strip.text.x = element_text(size =25),\n    strip.background =  element_blank() ,\n    strip.background = element_blank(),\n    axis.title = element_text(size = 25),\n    axis.text.x = element_text(size = 22),\n    axis.text.y = element_text(size = 22),\n    axis.ticks = element_blank(),\n    axis.line = element_line(colour = \"black\")) +\n  geom_boxplot(colour = \"black\",fill = \"purple3\",outlier.colour = \"White\")\n# guides(fill = guide_legend(override.aes = list(size=10)))\nplot\n\n\nggsave(\"plot_EDA.tiff\", plot=plot,  width=12, height=8,dpi = 600)\n\n\n\n\nLinEqn = function(m) {\n  l <- list(a = format(coef(m)[1], digits = 2),\n            b = format(abs(coef(m)[2]), digits = 2));\n  if (coef(m)[2] >= 0) {\n    eq <- substitute(italic(y) == a + b %.% italic(x),l)\n  } else {\n    eq <- substitute(italic(y) == a - b %.% italic(x),l)    \n  }\n  as.character(as.expression(eq));                 \n}\nplot <- ggplot(dfobs2,aes(x=WM_updating,y=d_Intensity_High))+\n  geom_point(size=4,alpha=1/1.5,shape=16) +\n  geom_smooth(method = \"lm\", se=T, formula = y ~ x,size=2,fullrange=T,color=\"purple3\") +\n  annotate(\"text\", x = 3.4, y = 0.38, color = \"black\", size = 7,\n           label = LinEqn(lm(d_Intensity_High ~ WM_updating, dfobs2)), parse = TRUE) +\n  labs(x=\"Updating\", y=\"Difference - High Intensity\\n\") +\n  theme_bw() + guides(fill=FALSE) + \n  scale_colour_brewer(palette=\"Set1\") +\n  theme(panel.border = element_blank(),\n        panel.border = element_blank(),\n        legend.position=\"top\",\n        legend.title=element_blank(),\n        legend.title=element_text(size=20,face=\"bold\"),\n        legend.key=element_blank(),\n        legend.text = element_text(size = 20),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        strip.text.y = element_blank() ,\n        strip.text.x = element_text(size =20),\n        strip.background =  element_blank() ,\n        strip.background = element_blank(),\n        axis.title = element_text(size = 20),\n        axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        axis.ticks = element_blank(),\n        axis.line = element_line(colour = \"black\")) +\n  guides(colour=guide_legend(override.aes=list(size=5)))\nplot\nggsave(\"plot_Regression.tiff\", plot=plot,  width=12, height=8,dpi = 600)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# EXECUTIVE FUNCTIONS -----------------------------------------------------\n\n\nfit <- lmer(Subjective_Intensity ~ Intensity / (Nature  * WM_updating) +\n              (1+Condition*Intensity|Participant) +\n              (1+Condition|Item),\n            data=df,\n            control = lmerControl(calc.derivs=F ))#,optimizer = \"optimx\",\n# optCtrl = list(method = \"nlminb\")))\nr.squaredGLMM(fit)\n\nconfint <- confint(fit, method=\"Wald\", nsim=1000,oldNames=F)\ncoefs <- data.frame(coef(summary(fit)))\ncoefs$CI25 <- tail(confint,nrow(coefs))[,1]\ncoefs$CI975 <- tail(confint,nrow(coefs))[,2]\np_list <- 2 * (1 - pnorm(abs(coefs$t.value)))\ncoefs <- subset(coefs,select=-c(Std..Error,t.value))\ncoefs <- round(coefs,2)\ncoefs$p <- round(p_list,3)\n\ncoefs\n\n\n\n\n\n\n\nplot <- ggplot(dfobs,aes(x=WM_updating,y=Subjective_Intensity,colour=Condition))+\n  geom_point(size=4,alpha=1/1.5,shape=16) +\n  geom_smooth(method = \"lm\", se=F, formula = y ~ x,size=2,fullrange=T) +\n  labs(x=\"Updating\", y=\"Subjective Intensity Memories\") +\n  theme_bw() + guides(fill=FALSE) + \n  scale_colour_brewer(palette=\"Set1\") +\n  theme(panel.border = element_blank(),\n        legend.position=\"top\",\n        legend.title=element_blank(),\n        # legend.title=element_text(size=16,face=\"bold\"),\n        legend.key=element_blank(),\n        legend.text = element_text(size = 15),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        # strip.text.y = element_blank() ,\n        strip.text.x = element_text(size =15),\n        strip.background =  element_blank() ,\n        strip.background = element_blank(),\n        axis.title = element_text(size = 15),\n        axis.line = element_line(colour = \"black\")) + \n  guides(colour=guide_legend(override.aes=list(size=5))) +\n  facet_grid(. ~ Intensity)\nplot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nplot <- ggplot(dfobs,aes(x=WM_updating,y=Subjective_Intensity,colour=Condition))+\n  geom_point(size=4,alpha=1/1.5,shape=16) +\n  geom_smooth(method = \"lm\", se=F, formula = y ~ x,size=2,fullrange=T) +\n  labs(x=\"Updating\", y=\"Subjective Intensity Memories\") +\n  theme_bw() + guides(fill=FALSE) + \n  scale_colour_brewer(palette=\"Set1\") +\n  theme(panel.border = element_blank(),\n        legend.position=\"top\",\n        legend.title=element_blank(),\n        # legend.title=element_text(size=16,face=\"bold\"),\n        legend.key=element_blank(),\n        legend.text = element_text(size = 15),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        # strip.text.y = element_blank() ,\n        strip.text.x = element_text(size =15),\n        strip.background =  element_blank() ,\n        strip.background = element_blank(),\n        axis.title = element_text(size = 15),\n        axis.line = element_line(colour = \"black\")) + \n  guides(colour=guide_legend(override.aes=list(size=5))) +\n  facet_grid(. ~ Intensity)\nplot\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# EXECUTIVE FUNCTIONS -----------------------------------------------------\n\n\n\ncor.test(dfobs2$d_EDA_High,dfobs2$TMT)\ncor.test(dfobs2$d_EDA_High,dfobs2$Stroop)\ncor.test(dfobs2$d_EDA_High,dfobs2$WM_updating)\ncor.test(dfobs2$d_Intensity_High,dfobs2$TMT)\ncor.test(dfobs2$d_Intensity_High,dfobs2$Stroop)\ncor.test(dfobs2$d_Intensity_High,dfobs2$WM_updating)\n\ncor.test(dfobs2$d_EDA_Mild,dfobs2$TMT)\ncor.test(dfobs2$d_EDA_Mild,dfobs2$Stroop)\ncor.test(dfobs2$d_EDA_Mild,dfobs2$WM_updating)\ncor.test(dfobs2$d_Intensity_Mild,dfobs2$TMT)\ncor.test(dfobs2$d_Intensity_Mild,dfobs2$Stroop)\ncor.test(dfobs2$d_Intensity_Mild,dfobs2$WM_updating)\n\nsummary(df$d_EDA_Mild)\nsummary(df$d_Intensity_Mild)\n\nfit <- lm(d_Intensity_High ~ WM_updating,data=dfobs2)\nfit <- lm(d_Intensity_High ~ TMT,data=dfobs2)\nfit <- lm(d_Intensity_High ~ Stroop + TMT + WM_updating,data=dfobs2)\nanova(fit)\nsummary(fit)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nplot(dfobs2$WM_updating,dfobs2$d_Intensity_High)\nsummary(dfobs2$d_Intensity_High)\nsource(\"preprocessing.R\")\ndfobs2 <- subset(dfobs2,Participant!=\"39FS\")\ndfobs2$Participant\n\noutliers <- subset(dfobs2,WM_updating==5)\noutliers$d_Intensity_High\noutliers$Participant\n\ncor.test(dfobs2$d_Intensity_High,dfobs2$WM_updating)\ncor.test(dfobs2$d_Intensity_High,dfobs2$Stroop)\ncor.test(dfobs2$d_Intensity_High,dfobs2$TMT)\ncor.test(dfobs2$d_Intensity_Mild,dfobs2$WM_updating)\ncor.test(dfobs2$d_Intensity_Mild,dfobs2$TMT)\ncor.test(dfobs2$d_Intensity_Mild,dfobs2$Stroop)\ncor.test(dfobs2$d_Intensity_Neutral,dfobs2$WM_updating)\ncor.test(dfobs2$d_Intensity_Neutral,dfobs2$Stroop)\ncor.test(dfobs2$d_Intensity_Neutral,dfobs2$TMT)\nsummary(dfobs2$d_Intensity_Mild)\n\nsummary(dfhigh)\nr.squaredGLMM(fit)\nsummary(fit)\n# confint(fit, method=\"boot\", nsim=1000)\ncoefs <- data.frame(round(coef(summary(fit)),2))\ncoefs$p <- round(2 * (1 - pnorm(abs(coefs$t.value))),3)\ncoefs\n\nggplot(dfobs2,aes(x=WM_updating,y=d_Intensity_High))+\n  geom_point(size=5,alpha=1/1.5,shape=16) +\n  geom_smooth(method = \"lm\", se=T, formula = y ~ x) +\n  theme_bw() + guides(fill=FALSE) + theme(panel.border = element_blank(), \n                                          panel.grid.major = element_blank(), \n                                          panel.grid.minor = element_blank(), \n                                          axis.line = element_line(colour = \"black\"))\n\n\nlibrary(ggplot2)\nlibrary(plotly)\ndfobs$Intensity <- factor(dfobs$Intensity,levels = c( \"High\",\"Mild\",\"Neutral\"))\nggplot(dfobs,aes(x=Subjective_Relevance,y=EDA,colour=Condition))+\n  geom_point() +\n  # geom_smooth(method='lm') +\n  geom_smooth(method='lm',data=subset(df,Condition==\"Real\")) +\n  geom_smooth(method='lm',data=subset(df,Condition==\"Fiction\")) +\n  # geom_boxplot()+\n  theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = \"black\")) + guides(fill=FALSE)\n\n ?geom_smooth\n  \nggplot(dfobs,aes(x=Intensity,y=Subjective_Intensity,colour=Stroop))+\n  geom_boxplot(alpha=1/2,fill=\"darkgrey\")+\n  geom_jitter(size=5,alpha=1/1.5,width = 0.5,shape=16) +\n  scale_colour_gradient2(midpoint=median(dfobs$Stroop),mid=\"orange\",low=\"red\",high=\"darkgreen\") +\n  theme_bw() + guides(fill=FALSE) + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = \"black\")) \n\n\n\n# SUBSET ONLY INTENSE -----------------------------------------------------\n\ndf <- subset(df,Intensity!=\"Neutral\")\ndfobs <- subset(dfobs,Intensity!=\"Neutral\")\n\nfit <- lmer(Subjective_Intensity ~ Condition * Stroop * \n              (1|Item) * (1|Participant),\n            data=df)\ncoefs <- data.frame(round(coef(summary(fit)),2))\ncoefs$p <- round(2 * (1 - pnorm(abs(coefs$t.value))),3)\ncoefs\n\nggplot(dfobs,aes(x=Stroop,y=Subjective_Intensity))+\n  geom_boxplot(alpha=1/2,fill=\"darkgrey\")+\n  geom_jitter(size=5,alpha=1/1.5,width = 0.5,shape=16) +\n  geom_smooth(method = \"lm\", se=FALSE, formula = y ~ x + I(x^3)) +\n  scale_colour_gradient2(midpoint=median(dfobs$Subjective_Relevance),mid=\"orange\",low=\"red\",high=\"darkgreen\") +\n  theme_bw() + guides(fill=FALSE) + theme(panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = \"black\")) + facet_grid(. ~ Condition)  \n  \n  ?abline\n",
    "created" : 1474279166347.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1445420451",
    "id" : "F88BCC0F",
    "lastKnownWriteTime" : 1473845988,
    "path" : "D:/Programs/Dropbox/RECHERCHE/articles/Fiction/Fiction2/Statistics/Acta_R1.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}